@import "variables.styl"
@import "functions.styl"

/* 自动居中 */
margin()
    margin 0 auto

/* 垂直对齐 */
.middle *
    vertical-align middle !important

/* 取消box-zing */
nozing()
    box-sizing initial !important

/* 行内元素支持宽和高*/
inblock()
    nowrap()
    display: inline-block
    vertical-align middle

/* 排版 */
nowrap()
    white-space nowrap
    overflow hidden
    text-overflow ellipsis

ie-transparentify(color)
    var color = '' +color
    filter: unquote('progid:DXImageTransform.Microsoft.gradient(startColorstr="#55' + substr(color, 1) + '",endColorstr="#55' + substr(color, 1) + '")')

// Focus shadow mixin.
focus-shadow() {
    box-shadow: 0 0 8px rgba(0, 0, 0, .18), 0 8px 16px rgba(0, 0, 0, .36);
}

shadow-2dp() {
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
            0 3px 1px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
            0 1px 5px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}

shadow-3dp() {
    box-shadow: 0 3px 4px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
            0 3px 3px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
            0 1px 8px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}

shadow-4dp() {
    box-shadow: 0 4px 5px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
            0 1px 10px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
            0 2px 4px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

shadow-6dp() {
    box-shadow: 0 6px 10px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
            0 1px 18px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
            0 3px 5px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

shadow-8dp() {
    box-shadow: 0 8px 10px 1px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
            0 3px 14px 2px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
            0 5px 5px -3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

shadow-16dp() {
    box-shadow: 0 16px 24px 2px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
            0 6px 30px 5px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
            0 8px 10px -5px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

shadow-24dp() {
    box-shadow: 0 9px 46px 8px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
            0 11px 15px -7px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
            0 24px 38px 3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

/* Animations */

material-animation-fast-out-slow-in($duration = 0.2s) {
    transition-duration: $duration;
    transition-timing-function: $animation-curve-fast-out-slow-in;
}

material-animation-linear-out-slow-in($duration = 0.2s) {
    transition-duration: $duration;
    transition-timing-function: $animation-curve-linear-out-slow-in;
}

material-animation-fast-out-linear-in($duration = 0.2s) {
    transition-duration: $duration;
    transition-timing-function: $animation-curve-fast-out-linear-in;
}

material-animation-default($duration = 0.2s) {
    transition-duration: $duration;
    transition-timing-function: $animation-curve-default;
}

/* Dialog */

dialog-width($units = 5) {
    if (type_of($units) != 'number') {
        error("The unit given to dialog-width should be a number.");
    } // 56dp is the base unit width for Dialogs.
    // With 5 units being the number of units for a mobile device.
    // https://goo.gl/sK2O5o
    width: $units * 56px;
}

/* Location */
abs-left($left = 0)
    position absolute
    left $left
    top 0
    right auto
    bottom auto

abs-right($right = 0)
    position absolute
    left auto
    right $right
    top 0
    bottom auto

abs-top(top = 0)
    position absolute
    left auto
    top top
    right auto
    bottom auto

abs-bottom(bottom = 0)
    position absolute
    left 0
    top auto
    right auto
    bottom bottom

// 拉伸 铺满父容器
abs-stretch()
    position absolute
    left 0
    top 0
    right 0
    bottom 0

    width 100%
    height 100%

abs-center()
    position absolute
    top auto
    bottom auto
    left 0
    right 0
    margin-left auto
    margin-right auto

// 拉伸 铺满父容器
fixed-stretch()
    position fixed
    left 0
    top 0
    right 0
    bottom 0

    width 100%
    height 100%

fixed-top(top = 0)
    position fixed
    left auto
    top top
    right auto
    bottom auto

fixed-bottom(bottom = 0)
    position fixed
    left 0
    margin-left auto
    margin-right auto
    top auto
    right 0
    bottom bottom

align-center()
    display block
    margin-left auto
    margin-right auto

/*Box model*/
// height width line-height for inline inline-block make text vertical-align to middle

inline-height(h, offset = 0)
    height h
    line-height h - offset

/*
*
* 图片处理
*
*/

// 容器高宽与图片尺寸一致
img-box($path)
    $path = img-path($path)
    width px(image-size($path)[0])
    height px(image-size($path)[1])

    img
        width 100%

// 图片垂直居中，参数
// $path: 图片名称
// $height: 父容器高度
img-v-center($path, $height)
    $path = img-path($path)
    abs-top()
    top (($height - px(image-size($path)[1])) / 2)

// 背景图片，默认center，自定义background-size
bg-img($path, $x = '', $y = '')
    $path = img-path($path)
    background url($path) center no-repeat
    if $x && $y
        background-size $x $y
    else if $x && !$y
        background-size $x
    else
        background-size cover

/*
*
* 动画
*
*/

quick-transition(args...)
    transition args .1s ease-in-out

normal-transition(args...)
    transition args $normal-duration ease-in-out